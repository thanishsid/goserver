// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/thanishsid/goserver/infrastructure/mailer"
	"sync"
)

// Ensure, that MailerMock does implement mailer.Mailer.
// If this is not the case, regenerate this file with moq.
var _ mailer.Mailer = &MailerMock{}

// MailerMock is a mock implementation of mailer.Mailer.
//
//	func TestSomethingThatUsesMailer(t *testing.T) {
//
//		// make and configure a mocked mailer.Mailer
//		mockedMailer := &MailerMock{
//			SendLinkMailFunc: func(ctx context.Context, data mailer.LinkMailData) error {
//				panic("mock out the SendLinkMail method")
//			},
//		}
//
//		// use mockedMailer in code that requires mailer.Mailer
//		// and then make assertions.
//
//	}
type MailerMock struct {
	// SendLinkMailFunc mocks the SendLinkMail method.
	SendLinkMailFunc func(ctx context.Context, data mailer.LinkMailData) error

	// calls tracks calls to the methods.
	calls struct {
		// SendLinkMail holds details about calls to the SendLinkMail method.
		SendLinkMail []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Data is the data argument value.
			Data mailer.LinkMailData
		}
	}
	lockSendLinkMail sync.RWMutex
}

// SendLinkMail calls SendLinkMailFunc.
func (mock *MailerMock) SendLinkMail(ctx context.Context, data mailer.LinkMailData) error {
	if mock.SendLinkMailFunc == nil {
		panic("MailerMock.SendLinkMailFunc: method is nil but Mailer.SendLinkMail was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Data mailer.LinkMailData
	}{
		Ctx:  ctx,
		Data: data,
	}
	mock.lockSendLinkMail.Lock()
	mock.calls.SendLinkMail = append(mock.calls.SendLinkMail, callInfo)
	mock.lockSendLinkMail.Unlock()
	return mock.SendLinkMailFunc(ctx, data)
}

// SendLinkMailCalls gets all the calls that were made to SendLinkMail.
// Check the length with:
//
//	len(mockedMailer.SendLinkMailCalls())
func (mock *MailerMock) SendLinkMailCalls() []struct {
	Ctx  context.Context
	Data mailer.LinkMailData
} {
	var calls []struct {
		Ctx  context.Context
		Data mailer.LinkMailData
	}
	mock.lockSendLinkMail.RLock()
	calls = mock.calls.SendLinkMail
	mock.lockSendLinkMail.RUnlock()
	return calls
}
